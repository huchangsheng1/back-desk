export default {
  name: "TestPaperTch",
  mixins: [testPaperMixin],
  data() {
    return {
      //按题目类型分类好的题目数据
      //题目类型==>  0:单选题  1:多选题  2:填空  3:描述  4:简答题
      sortedTopics: [
        { type: 0, topic_content: [], score: 0, showAllScore: false },
        { type: 1, topic_content: [], score: 0, showAllScore: false },
        { type: 2, topic_content: [], score: 0, showAllScore: false },
        { type: 3, topic_content: [], score: 0, showAllScore: false },
        { type: 4, topic_content: [], score: 0, showAllScore: false },
      ],

      // //试卷数据
      testData: {
        examId: -1,
        examName: "点击编辑试卷名称", //试卷名称
        time: 60, //答题时间
        topicNum: 0, //题目数量
        passMark: 0,
        autoMack: 1, //是否自动评分
        permitCopy: 1, //是否允许复制文本
        repeatTest: 1, //用户可重复考试次数
        switchPage: -1,
        disruptOrder: 0, //是否打乱题目顺序
        creatorName: this.$store.state.userName,
      },

      //用户数据
      userData: {
        id: "",
        name: "李子建",
      },

      //当前编辑的题目索引
      editInedx: {
        type: "-1",
        index: "-1",
        input: "-2",
      },

      topicDifficultyOptions: ["简单", "中等", "困难"], //题目难度选项

      //侧导航栏是否悬浮
      isFixed: false,
      topic_nav_style: "top:0px",

      pickerOptions: {
          shortcuts: [{
            text: '今天',
            onClick(picker) {
              picker.$emit('pick', new Date());
            }
          }, {
            text: '昨天',
            onClick(picker) {
              const date = new Date();
              date.setTime(date.getTime() - 3600 * 1000 * 24);
              picker.$emit('pick', date);
            }
          }, {
            text: '一周前',
            onClick(picker) {
              const date = new Date();
              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);
              picker.$emit('pick', date);
            }
          }]
        },
        value1: '',
        value2: '',
        value3: '',
    };
  },

  computed: {
    params() {
      return this.$route.params;
    },
    //试卷总分
    totalScore() {
      var score = 0;
      this.sortedTopics.forEach((element) => {
        element.topic_content.forEach((item) => {
          // console.log(typeof(item.score));
          score += parseInt(item.score);
        });
      });
      this.testData.totalScore = score;
      return score;
    },

    //按填空符(三个下划线)划分字符串
    fillSymbolStr() {
      return function (str) {
        var q = str.split("___");
        return q;
      };
    },
  },

  created() {
    let type = this.$route.params.type;
    if (type === "add") {
    }
    if (type === "edit") {
      this.getTestPaper();
    }
  },

  mounted() {
    // 监听滚动事件，然后用handleScroll这个方法进行相应的处理
    window.addEventListener("scroll", this.handleScroll);
  },

  methods: {
    //发布
    release(){
      //{testData.examName作业名称
          // code:201添加作业
          // task:题目|选项|答案correctAnswer(类型), 
          // courseID:课程id,
          // end_time:截止时间,
          // full:满分this.testData.totalScore,
      //}
      console.log(this.sortedTopics)
      
      let task_work = '';
      //work_josn拼接
      this.sortedTopics.forEach(item => {
        
        item.topic_content.forEach(once =>{
          let option_topic='';//所有选项
          
          let Correct_option = '';//正确选项
          // console.log(once.question,once.topicType+1,once.correctAnswer)

          let option = ["A","B","C","D"];//选项
          // option_topic = ''
          once.choice.forEach((dus,key) =>{
            option_topic += (option_topic == '')? option[key]+'.'+ dus : ','+ option[key]+'.'+ dus
            if(item.type == 0){//单选
                  if(dus == once.correctAnswer){//获得答案根据相同选项内容判断获得前缀abcd
                    Correct_option = option[key]
              }
            }else if(item.type == 1){//多选
              once.correctAnswer.forEach(multiple => {//获得答案根据相同选项内容判断abcd
                 if(dus == multiple){
                    Correct_option += option[key]
                 }
              })
  
            }else if(item.type == 2){
                    Correct_option = once.correctAnswer
            }
             
          })
          if( item.type == 0||item.type == 1){                
            task_work += (task_work == '')? once.question+'|'+option_topic+'|'+Correct_option+"("+Number(item.type+1)+")":
                                          '&'+once.question+'|'+option_topic+'|'+Correct_option+"("+Number(item.type+1)+")"
          }else if(item.type == 2){
            task_work += (task_work == '')? once.question+'|'+'|'+Correct_option+"("+Number(item.type+1)+")":
                              '&'+once.question+'|'+'|'+Correct_option+"("+Number(item.type+1)+")"
          }else{
            task_work += (task_work == '')? once.question+'|'+'|'+"("+Number(item.type+1)+")":
                                '&'+once.question+'|'+'|'+"("+Number(item.type+1)+")"
          }
        })
      })
      // console.log(task_work)
      
      //ajax发布题目
      let data = {
        codes:201,//作业发布状态码
        course:this.testData.examName,//作业名称
        task:task_work, //作业内容
        courseID:71,
        end_time:'2021-12-13 00:00::00',
        full:this.testData.totalScore,//满分
      }
      work_upjob(data).then(
        res => {
          console.log(res)
        }
      )
      // this.$http.post('/task/upjob',{
        // code:201,//作业发布状态码
        // course:this.testData.examName,//作业名称
        // task:task_work, //作业内容
        // courseID:71,
        // end_time:'2021-12-13 00:00::00',
        // full:this.testData.totalScore,//满分
      // }).then(
        // res => {
          // console.log(res)
        // }
      // )
    },
    // 复制试卷
    copy() {
      this.testData.examName = "点击编辑试卷名称";
      this.$router.push({
        name: "createExam",
        params: { type: "add", data: this.testData },
      });
      this.$message.success("复制成功");
    },

    //提交试卷
    submit() {
      /*  处理题目信息 */
      var topicData = [];
      this.sortedTopics.forEach((element) => {
        if (element.topic_content.length != 0) {
          element.topic_content.forEach((item) => {
            //深拷贝
            var newItem = JSON.parse(JSON.stringify(item));
            topicData.push(newItem);
          });
        }
      });

      //处理选择题选项
      topicData.forEach((item) => {
        var choice = "";
        item.choice.forEach((c) => {
          choice += c + "\n";
        });
        item.choice = choice.slice(0, -1);
        item.required = item.required === true ? 1:0
      });

      //处理正确答案
      for(let item of topicData) {
        if(!item.correctAnswer){
          this.$message.warning("有题目未选答案");
          return
        }
        if (item.correctAnswer instanceof Array) {
          if(item.correctAnswer.length === 1 && item.correctAnswer[0] === ''){
          this.$message.warning("有题目未选答案");
          return
        }
          var correctAnswer = "";
          item.correctAnswer.forEach((c) => {
            correctAnswer += c + "\n";
          });
          item.correctAnswer = correctAnswer.slice(0, -1);
        }
      };

      //处理试卷信息
      var testData = JSON.parse(JSON.stringify(this.testData));
      testData.topicTchDTOList = topicData;
      testData.creatorName = this.$store.state.userName;
      testData.topicNum = topicData.length;
      testData.autoMack = testData.autoMack == true ? "1" : "0";
      testData.disruptOrder = testData.disruptOrder == true ? "1" : "0";
      testData.permitCopy = testData.permitCopy == true ? "1" : "0";

      // console.log(testData);

      var request = {
        ...testData,
      };

      if (this.params.type === "edit") {
        var url = "/updateTestPaper";
      } else {
        var url = "/createTestPaper";
      }
      console.log(request);
      this.$http.post(url, request).then((res) => {
        if (res.code == 200) {
          this.$message.success(res.msg);
          if (url == "/createTestPaper") {
            this.$router.push("/testPaperTch/" + res.data.examId);
          }
        }
      });
    },

    //编辑试卷---获取试卷信息
    async getTestPaper() {
      let params = {
        examId: this.$route.params.tp_id,
      };
      await this.$http.get("/getTestPaperByTp_id", { params }).then((res) => {
        // this.testData = res.data
        console.log("result.data ==> ", res);

        if (res.code == 200) {
          var testData = res.data;
        } else {
          return;
        }

        //处理试卷的题目数据
        testData.topicTchDTOList.forEach((item) => {
          if (item.topicType == 4 || item.topicType == 3 || item.topicType == 1) {
            item.correctAnswer = item.correctAnswer.split(/[\n]/g);
          }
          //按换行符分割字符串
          item.choice = item.choice.split(/[\n]/g);
          item.required = item.required === 1 ? true : false;
        });
        testData.autoMack = testData.autoMack == 1 ? true : false;
        testData.disruptOrder = testData.disruptOrder == 1 ? true : false;
        testData.permitCopy = testData.permitCopy == 1 ? true : false;

        this.testData = testData;
        console.log("testData ==> ", this.testData);

        //按题目类型分类并保存
        var topics = this.testData.topicTchDTOList;
        for (let i = 0; i < topics.length; i++) {
          for (let item of this.sortedTopics) {
            //     // console.log(topics[i].topicType,item.type);
            if (topics[i].topicType == item.type) {
              item.topic_content.push(topics[i]);
            }
          }
        }
        console.log(this.sortedTopics);
      });
    },

    //统一设置题目分数
    setAllScore(val, type) {
      val = parseInt(val);
      this.sortedTopics[type].topic_content.forEach((item) => {
        item.score = val;
      });
    },

    //设置当前编辑中的题目
    edit(type, index) {
      if (this.editInedx.type == type && this.editInedx.index == index) {
        console.log("拦截");
        return;
      }
      this.editInedx.type = type;
      this.editInedx.index = index;
    },

    //是否在编辑状态
    isEdit(type, index, input = -2) {
      if (
        this.editInedx.type == type &&
        this.editInedx.index == index &&
        this.editInedx.input == input
      ) {
        return true;
      } else {
        return false;
      }
    },

    //滚动事件
    handleScroll() {
      let scrollTop =
        window.pageYOffset ||
        document.documentElement.scrollTop ||
        document.body.scrollTop; // 滚动条偏移量
      if (scrollTop > 154) {
        this.topic_nav_style = "top:" + (scrollTop + 20) + "px";
        this.isFixed = true;
      } else {
        this.isFixed = false;
      }
    },

    //点击题号导航跳转
    topicNav(type, index) {
      var totalIndex = this.topicNavIndex_mixin(type, index) - 1;
      setTimeout(() => {
        document
          .getElementsByClassName("topic-content")
          [totalIndex].scrollIntoView({ behavior: "smooth" });
      }, 100);
      this.edit(type, index);
    },

    //新建题目
    newTopic(type) {
      this.sortedTopics[type].topic_content.push({
        u_id: this.userData.id,
        topicType: type,
        question: "这是我新建的题目",
        choice: ["选项1", "选项2", "选项3", "选项4"],
        correctAnswer: [],
        analysis: "这是答案分析",
        difficulty: "中等",
        score: 10,
        subjectId: "1",
        required: true
      });

      var time = setTimeout(() => {
        this.topicNav(type, this.sortedTopics[type].topic_content.length - 1);
        clearInterval(time);
      }, 100);
    },

    //删除当前正在编辑的题目
    delTopic() {
      var type = this.editInedx.type;
      var index = this.editInedx.index;
      this.sortedTopics[type].topic_content.splice(index, 1);
    },

    //上移或下移当前正在编辑的题目  -1:上移   1:下移
    moveTopic(n) {
      var type = this.editInedx.type;
      var index = this.editInedx.index;

      if (index == 0 && n == -1) {
        console.log("拦截");
        return;
      }
      if (index == this.sortedTopics[type].topic_content.length - 1 && n == 1) {
        console.log("拦截");
        return;
      }

      var topic = this.sortedTopics[type].topic_content[index];
      var upTopic = this.sortedTopics[type].topic_content[index + n];

      this.sortedTopics[type].topic_content.splice(index, 1, upTopic);
      this.sortedTopics[type].topic_content.splice(index + n, 1, topic);

      var time = setTimeout(() => {
        this.topicNav(type, index + n, 10);
        clearInterval(time);
      }, 100);
    },

    //删除选项
    delRadios(type, tIndex, index) {
      this.sortedTopics[type].topic_content[tIndex].choice.splice(index, 1);
    },

    //添加选项
    addRadios(type, tIndex) {
      var choiceLength =
        this.sortedTopics[type].topic_content[tIndex].choice.length + 1;
      if (choiceLength > 4) {
        this.$message({
          message: "不能再添加选项了喔!",
          type: "warning",
        });
        return;
      }
      this.sortedTopics[type].topic_content[tIndex].choice.push(
        "选项" + choiceLength
      );
    },
    Fillblanks (tIndex) {
      var str = this.sortedTopics[2].topic_content[tIndex].question;
      // console.log(str);
      this.sortedTopics[2].topic_content[tIndex].question = str + "___";
    },
    //添加描述填空符
    addFillSymbol(tIndex) {
      var str = this.sortedTopics[3].topic_content[tIndex].question;
      // console.log(str);
      this.sortedTopics[3].topic_content[tIndex].question = str + "___";
    },


    //添加关键字
    addKeyWord(tIndex) {
      this.sortedTopics[4].topic_content[tIndex].correctAnswer.push("");
      console.log(this.sortedTopics[4].topic_content[tIndex]);
    },
  },
};